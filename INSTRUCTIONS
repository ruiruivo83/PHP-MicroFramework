PHP version 7.4


#################################################################
################### NEW INSTALL with COMPOSER ###################
#################################################################
composer.json - Lists all dependencies in one file
[Commands]
composer dump-autoload - after updating composer.json for updating the autoload

Composer update - Install all dependencies from composer.json
Composer require packageName - Adds package and updates composer.json

#################################################################
#########################  DATABASE #############################
#################################################################

# QUERY FOR - Create table for auto updates
 CREATE TABLE _database_updates (
    id INT AUTO_INCREMENT PRIMARY KEY,
    last_executed_version CHAR(255)
);

#################################################################
###################  DATABASE - User Access  ####################
#################################################################

user: adminusertest
pass: adminusertest123

user: usertest
pass: test123

#################################################################
###################### ARCHITECTURE LOGIC #######################
#################################################################
1 - FRONT CONTROLLER (/public/index.php)
2 - ROUTER (/core/router.php) - with routing table ("public function add")
3 - CONTROLLER CLASS or any other
4 - MODEL for data
5 - Return VIEW with DATA in it, replaced with TWIG engine

#################################################################
######################## File Sequence  #########################
#################################################################
composer.json
Config.php - Reads all configurations first
public\index - FRONT CONTROLLER and routing table
core\router - Router reads and separates the dinamic URL into diferent variables
core\controller - Call for the appropriate controller and action from the variables from the URL
controllers\???.php (Runs whatever controller and action you call in the URL)

[CONTROLLER Method]
View::RenderTemplate ???.html - Renders whatever html file for this controller\action. One page for each action

#################################################################
##################### FOLDER ARCHITECTURE  ######################
#################################################################
Folder structure in App\Controllers and App\Views must be the same

#################################################################
####################### ACTION FILTERS  #########################
#################################################################
The logic is to be able to execute code before and after any method.
For example to verify if the user is logged in, the language, etc.

For that we change the methods name to "sometingAction" but we only
call on the "something", this will force an error that
forces the "__call" method.

This "__call" method forces the execution of the "Before" method, 
the right methode itself adding the "Action" word, and the "After" method.

This way we can execute something before and after any method we call.  

IF - If the "before" method returns false then the main method "sometingAction" is not called.
For example if the user is not logged in.

#################################################################
##########################  PHP UNIT  ###########################
#################################################################
Add path to Environment Variables in Windows System
C:\Sources\RapidFire-PHP-MicroFramework\vendor\bi

